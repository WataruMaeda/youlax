{
  "_args": [
    [
      {
        "raw": "babel-plugin-flow-react-proptypes@^5.1.1",
        "scope": null,
        "escapedName": "babel-plugin-flow-react-proptypes",
        "name": "babel-plugin-flow-react-proptypes",
        "rawSpec": "^5.1.1",
        "spec": ">=5.1.1 <6.0.0",
        "type": "range"
      },
      "/Users/wmaeda/Documents/GitHub/youlax/node_modules/react-native-popup-dialog"
    ]
  ],
  "_from": "babel-plugin-flow-react-proptypes@>=5.1.1 <6.0.0",
  "_id": "babel-plugin-flow-react-proptypes@5.2.0",
  "_inCache": true,
  "_location": "/babel-plugin-flow-react-proptypes",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-flow-react-proptypes-5.2.0.tgz_1505993851561_0.5503603846300393"
  },
  "_npmUser": {
    "name": "greenjello",
    "email": "f.bagnardi@gmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-flow-react-proptypes@^5.1.1",
    "scope": null,
    "escapedName": "babel-plugin-flow-react-proptypes",
    "name": "babel-plugin-flow-react-proptypes",
    "rawSpec": "^5.1.1",
    "spec": ">=5.1.1 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-native-popup-dialog"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-flow-react-proptypes/-/babel-plugin-flow-react-proptypes-5.2.0.tgz",
  "_shasum": "4fa0a09b53770b5a4f8e617d70ed949fef93bb44",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-flow-react-proptypes@^5.1.1",
  "_where": "/Users/wmaeda/Documents/GitHub/youlax/node_modules/react-native-popup-dialog",
  "author": {
    "name": "Frankie Bagnardi",
    "email": "f.bagnardi@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/brigand/babel-plugin-flow-react-proptypes/issues"
  },
  "dependencies": {
    "babel-core": "^6.25.0",
    "babel-template": "^6.25.0",
    "babel-traverse": "^6.25.0",
    "babel-types": "^6.25.0"
  },
  "description": "converts flow types to react proptypes",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^20.0.3",
    "babel-plugin-syntax-flow": "^6.18.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "chalk": "^1.1.3",
    "coveralls": "^2.13.1",
    "cross-env": "^5.0.5",
    "eslint": "^4.0.0",
    "eslint-plugin-react": "^7.0.1",
    "jest": "^20.0.4",
    "jest-environment-node-debug": "^2.0.0",
    "prettier": "^1.4.4",
    "react": "^15.5.4",
    "react-test-renderer": "^15.5.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-zLQHsjwN91XAvJsZW4HXwzEzBoSCX0U4E2xqi/T0R56P8hfNS0g7TmfupD+6JiDTQOio/FFAMbAeoIet1BU4Uw==",
    "shasum": "4fa0a09b53770b5a4f8e617d70ed949fef93bb44",
    "tarball": "https://registry.npmjs.org/babel-plugin-flow-react-proptypes/-/babel-plugin-flow-react-proptypes-5.2.0.tgz"
  },
  "files": [
    "lib/*.js"
  ],
  "gitHead": "bfabd12bfc3d3822d9b4aa31d36cc3777a2b70c8",
  "homepage": "https://github.com/brigand/babel-plugin-flow-react-proptypes#readme",
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/lib/"
    ]
  },
  "keywords": [
    "react",
    "flow",
    "flowtype",
    "proptypes",
    "babel",
    "babel-plugin",
    "es6"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "greenjello",
      "email": "f.bagnardi@gmail.com"
    }
  ],
  "name": "babel-plugin-flow-react-proptypes",
  "optionalDependencies": {},
  "readme": "A babel plugin to generate React PropTypes definitions from Flow type declarations.\n\n[![build status](https://img.shields.io/travis/brigand/babel-plugin-flow-react-proptypes/master.svg?style=flat-square)](https://travis-ci.org/brigand/babel-plugin-flow-react-proptypes)\n[![Coverage Status](https://coveralls.io/repos/github/brigand/babel-plugin-flow-react-proptypes/badge.svg?branch=master)](https://coveralls.io/github/brigand/babel-plugin-flow-react-proptypes?branch=master)\n[![npm version](https://img.shields.io/npm/v/babel-plugin-flow-react-proptypes.svg?style=flat-square)](https://www.npmjs.com/package/babel-plugin-flow-react-proptypes)\n[![npm downloads](https://img.shields.io/npm/dm/babel-plugin-flow-react-proptypes.svg?style=flat-square)](https://www.npmjs.com/package/babel-plugin-flow-react-proptypes)\n[![Dependency Status](https://img.shields.io/david/brigand/babel-plugin-flow-react-proptypes.svg?style=flat-square)](https://david-dm.org/brigand/babel-plugin-flow-react-proptypes)\n\n## Example\n\nWith this input:\n\n```js\nvar React = require('react');\n\nexport type Qux = {baz: 'literal'};\n\nimport type SomeExternalType from './types';\n\ntype FooProps = {\n  an_optional_string?: string,\n  a_number: number,\n  a_boolean: boolean,\n  a_generic_object: Object,\n  array_of_strings: Array<string>,\n  instance_of_Bar: Bar,\n  anything: any,\n  mixed: mixed,\n  one_of: 'QUACK' | 'BARK' | 5,\n  one_of_type: number | string,\n  nested_object_level_1: {\n    string_property_1: string,\n    nested_object_level_2: {\n      nested_object_level_3: {\n        string_property_3: string,\n      },\n      string_property_2: string,\n    }\n  },\n  should_error_if_provided: void,\n  intersection: {foo: string} & { bar: number } & Qux,\n  some_external_type: SomeExternalType,\n  some_external_type_intersection: {foo: string} & SomeExternalType,\n}\n\nexport default class Foo extends React.Component {\n  props: FooProps\n}}\n```\n\nThe output will be:\n\n```js\nvar React = require('react');\n\nif (typeof exports !== 'undefined')\n  Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_Qux', {\n    value: {\n      baz: require('prop-types').oneOf(['literal']).isRequired,\n    },\n  });\n\nvar babelPluginFlowReactPropTypes_proptype_SomeExternalType = require('./types').babelPluginFlowReactPropTypes_proptype_SomeExternalType ||\n  require('prop-types').any;\n\nvar Foo = (function(_React$Component) {\n  // babel class boilerplate\n})(React.Component);\n\nFoo.propTypes = {\n  an_optional_string: require('prop-types').string,\n  a_number: require('prop-types').number.isRequired,\n  a_boolean: require('prop-types').bool.isRequired,\n  a_generic_object: require('prop-types').object.isRequired,\n  array_of_strings: require('prop-types').arrayOf(require('prop-types').string).isRequired,\n  instance_of_Bar: typeof Bar === 'function'\n    ? require('prop-types').instanceOf(Bar).isRequired\n    : require('prop-types').any.isRequired,\n  anything: require('prop-types').any.isRequired,\n  mixed: require('prop-types').any.isRequired,\n  one_of: require('prop-types').oneOf(['QUACK', 'BARK', 5]).isRequired,\n  one_of_type: require('prop-types').oneOfType([require('prop-types').number, require('prop-types').string]).isRequired,\n  nested_object_level_1: require('prop-types').shape({\n    string_property_1: require('prop-types').string.isRequired,\n    nested_object_level_2: require('prop-types').shape({\n      nested_object_level_3: require('prop-types').shape({\n        string_property_3: require('prop-types').string.isRequired,\n      }).isRequired,\n      string_property_2: require('prop-types').string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  should_error_if_provided: function should_error_if_provided(props, propName, componentName) {\n    if (props[propName] != null)\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` of value `' +\n          value +\n          '` passed to `' +\n          componentName +\n          '`. Expected undefined or null.'\n      );\n  },\n  intersection: require('prop-types').shape({\n    foo: require('prop-types').string.isRequired,\n    bar: require('prop-types').number.isRequired,\n    baz: require('prop-types').oneOf(['literal']).isRequired,\n  }).isRequired,\n  some_external_type: typeof babelPluginFlowReactPropTypes_proptype_SomeExternalType === 'function'\n    ? babelPluginFlowReactPropTypes_proptype_SomeExternalType\n    : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_SomeExternalType).isRequired,\n  some_external_type_intersection: require('prop-types').shape(\n    Object.assign(\n      {},\n      {foo: require('prop-types').string.isRequired,},\n      babelPluginFlowReactPropTypes_proptype_SomeExternalType === require('prop-types').any\n        ? {}\n        : babelPluginFlowReactPropTypes_proptype_SomeExternalType\n    )\n  ).isRequired,\n};\nexports.default = Foo;\n```\n\n## Usage\n\nThis plugin searches for a React components using type declaration. Works with functional components and ES6 classes. `React.createClass` is not currently supported.\n\n\n## Install\n\nFirst install the plugin:\n\n```sh\nnpm install --save-dev babel-plugin-flow-react-proptypes\n```\n\nAlso install the prop-types package. This is required for React `>=15.5.0`. For earlier React versions\nyou can use version `0.21.0` of this plugin, which doesn't use the prop-types pacakge.\n\n```sh\nnpm install --save prop-types\n```\n\nThen add it to your babelrc:\n\n```json\n{\n  \"presets\": [\"...\"],\n  \"plugins\": [\"flow-react-proptypes\"]\n}\n```\n\nTo save some bytes in production, you can also only enable it in development mode.\n\n```json\n{\n  \"presets\": [\"...\"],\n  \"env\": {\n    \"development\": {\n      \"plugins\": [\"flow-react-proptypes\"]\n    }\n  }\n}\n```\n\n## Suppression\nThis plugin isn't perfect. You can disable it for an entire file with this directive (including quotes):\n\n```js\n'no babel-plugin-flow-react-proptypes';\n```\n\nSpecifically for react-native you can disable this for files in `node_modules` with the `ignoreNodeModules` config option.\n\n```json\n{\n  \"presets\": [\"...\"],\n  \"plugins\": [[\"flow-react-proptypes\", {\"ignoreNodeModules\": true}]]\n}\n```\n\nIf you already have other plugins in plugins section. It is important to place\n`flow-react-proptypes` before the following plugins:\n\n- `transform-class-properties`\n- `transform-flow-strip-types`\n\nIf you're using the 'react' or 'flow' presets, you don't need to do anything special.\n\n## Minimizing production bundle size\nIn production, omitting props and minimizing bundle size can be done with the additon of two things:\n1. Add the [transform-react-remove-prop-types](https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types) plugin\n2. Omit exported types to allow for dead code pruning\n\nThere are cases where a library wishes to `export type` making types available in `*.js.flow` shadow files,\nbut these may have no other purpose during runtime.  If you wish to omit the corresponding export of\nthe generated flow types, using this option with the \n[transform-react-remove-prop-types](https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types) \nplugin will allow for the smallest production bundle size.\n\nAn example snippet from a `.babelrc`:\n```json\n\"production\": {\n  \"plugins\": [\n    [\"transform-react-remove-prop-types\", {\n      \"mode\": \"wrap\",\n      \"plugins\": [\n        [\"babel-plugin-flow-react-proptypes\", {\"omitRuntimeTypeExport\": true}],\n        \"babel-plugin-transform-flow-strip-types\",\n      ]\n    }]\n  ]\n}\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brigand/babel-plugin-flow-react-proptypes.git"
  },
  "scripts": {
    "build": "cross-env BABEL_ENV=production babel src/ --out-dir lib/ --ignore src/__tests__ --presets es2015,stage-1,react",
    "coveralls": "cat ./coverage/lcov.info | node node_modules/.bin/coveralls",
    "lint": "eslint src test",
    "predeploy": "npm run build && npm run lint",
    "prepublish": "npm run build && npm run lint",
    "test": "npm run build && jest --coverage"
  },
  "version": "5.2.0"
}
